/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

import {
  ParsedColorToken,
} from '@cobalt-ui/core';

export declare const tokens: {
  color: {
    black: ParsedColorToken['$value'];
    blue: {
      '10': ParsedColorToken['$value'];
      '20': ParsedColorToken['$value'];
      '30': ParsedColorToken['$value'];
      '40': ParsedColorToken['$value'];
      '50': ParsedColorToken['$value'];
      '60': ParsedColorToken['$value'];
      '70': ParsedColorToken['$value'];
      '80': ParsedColorToken['$value'];
      '90': ParsedColorToken['$value'];
      '100': ParsedColorToken['$value'];
      '00': ParsedColorToken['$value'];
    };
    white: ParsedColorToken['$value'];
  };
  ui: {
    bg: ParsedColorToken['$value'];
    fg: ParsedColorToken['$value'];
  };
};

export declare const meta: {
  color: {
    black: ParsedColorToken;
    blue: {
      '10': ParsedColorToken;
      '20': ParsedColorToken;
      '30': ParsedColorToken;
      '40': ParsedColorToken;
      '50': ParsedColorToken;
      '60': ParsedColorToken;
      '70': ParsedColorToken;
      '80': ParsedColorToken;
      '90': ParsedColorToken;
      '100': ParsedColorToken;
      '00': ParsedColorToken;
    };
    white: ParsedColorToken;
  };
  ui: {
    bg: ParsedColorToken & { $extensions: { mode: typeof modes['ui']['bg'] } };
    fg: ParsedColorToken & { $extensions: { mode: typeof modes['ui']['fg'] } };
  };
};

export declare const modes: {
  ui: {
    bg: {
      light: ParsedColorToken['$value'];
      dark: ParsedColorToken['$value'];
    };
    fg: {
      light: ParsedColorToken['$value'];
      dark: ParsedColorToken['$value'];
    };
  };
};

export declare function token<K extends keyof typeof tokens>(tokenID: K, modeName?: never): typeof tokens[K];
export declare function token<K extends keyof typeof modes, M extends keyof typeof modes[K]>(tokenID: K, modeName: M): typeof modes[K][M];
