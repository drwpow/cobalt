---
import { getAriaCurrent } from '../lib/navigation';
import Terrazzo from './terrazzo.astro';

const NAV_ITEMS = [
  // {
  //   title: "Token Lab",
  //   items: [{ url: "/token-lab", title: "Coming Soon!" }],
  // },
  {
    title: 'Guides',
    items: [
      { url: '/guides/dtcg', title: 'DTCG Tokens' },
      { url: '/guides/modes', title: 'Modes + Theming' },
      { url: '/guides/styleguide', title: 'DS Styleguide' },
    ],
  },
  {
    title: 'CLI',
    items: [
      { url: '/cli', title: 'Intro' },
      { url: '/cli/config', title: 'Config' },
      { url: '/cli/migrating', title: 'Migrating from Cobalt' },
      {
        title: 'Integrations',
        url: '/cli/integrations',
        items: [
          { url: 'css', title: 'CSS' },
          { url: 'sass', title: 'Sass' },
          { url: 'js', title: 'JS/TS' },
          { url: 'swift', title: 'Swift' },
          { url: 'tailwind', title: 'Tailwind' },
          { url: 'custom', title: 'Custom' },
        ],
      },
      {
        url: '/cli/api',
        title: 'API',
        items: [
          { url: 'plugin-development', title: 'Plugin Development' },
          { url: 'js', title: 'JS API' },
        ],
      },
    ],
  },
  // {
  //   title: "Components",
  //   items: [
  //     { url: "/components/color-picker", title: "ColorPicker" },
  //     { url: "/components/demo", title: "Demo" },
  //     { url: "/components/slider", title: "Slider" },
  //   ],
  // },
  {
    title: 'Reference',
    items: [
      { url: '/reference/tokens', title: 'Token Types' },
      { url: '/reference/about', title: 'About the Project' },
    ],
  },
];
---

<div class="sidenav">
  <a class="logo-link" href="/"><Terrazzo size="1.25rem" /></a>

  <nav class="nav" aria-label="Table of Contents">
    {
      NAV_ITEMS.map((section) => (
        <li class="section">
          <h4 class="section-title">{section.title}</h4>
          <ul class="section-nav">
            {section.items?.map((item) => {
              const url = `/docs${item.url}`;
              return (
                <li class="nav-item">
                  {item.items ? (
                    <details
                      class="details"
                      open={
                        !!getAriaCurrent(url, Astro.request.url) || undefined
                      }
                    >
                      <summary class="summary">
                        <a
                          class="nav-link"
                          href={url}
                          aria-current={getAriaCurrent(url, Astro.request.url)}
                        >
                          <span class="nav-link-highlight">{item.title}</span>
                        </a>
                      </summary>
                      <ul class="nav-subnav">
                        {(item.items ?? []).map((subitem) => {
                          const subURL = [url, subitem.url].join("/");
                          return (
                            <li class="nav-subitem">
                              <a
                                class="nav-sublink"
                                href={subURL}
                                aria-current={getAriaCurrent(
                                  subURL,
                                  Astro.request.url
                                )}
                              >
                                {subitem.title}
                              </a>
                            </li>
                          );
                        })}
                      </ul>
                    </details>
                  ) : (
                    <a
                      class="nav-link"
                      href={url}
                      aria-current={getAriaCurrent(url, Astro.request.url)}
                    >
                      {item.title}
                    </a>
                  )}
                </li>
              );
            })}
          </ul>
        </li>
      ))
    }
  </nav>
</div>

<style>
  .sidenav {
    --grid: calc(0.5 * var(--grid-size));

    background: var(--tz-color-bg-1);
    border-right: var(--tz-border-2);
    color: var(--tz-color-text-2);
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
  }

  .logo {
    height: 1.5rem;
    width: auto;
  }

  .logo-link {
    display: flex;
    padding: var(--grid);
  }

  .nav {
    display: flex;
    flex-direction: column;
    gap: var(--grid);
    list-style: none;
  }

  .nav-item,
  .section,
  .section-nav,
  .nav-subnav,
  .nav-subitem {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .section-title {
    color: var(--tz-color-text-2);
    font-size: var(--tz-typography-300-medium-font-size);
    font-weight: var(--tz-typography-300-medium-font-weight);
    line-height: var(--tz-typography-300-medium-line-height);
    margin: 0 var(--grid) var(--tz-space-200);
  }

  .nav-link,
  .nav-sublink {
    align-items: center;
    color: var(--tz-color-text-1);
    display: flex;
    font-size: var(--tz-typography-200-regular-font-size);
    height: var(--tz-space-control-s);
    text-decoration: none;
    padding-inline: var(--grid);
    position: relative;

    &::before {
      background-color: var(--tz-color-base-lime-800);
      content: "";
      display: block;
      left: var(--tz-space-300);
      height: 100%;
      top: 0;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      width: 2px;
    }

    &:hover {
      background-color: var(--tz-color-base-lime-900);

      &::before {
        opacity: 0.5;
      }
    }

    &[aria-current="page"] {
      color: var(--tz-color-base-lime-300);

      &::before {
        opacity: 1;
      }
    }
  }

  .nav-sublink {
    font-size: var(--tz-typography-200-regular-font-size);
    opacity: 0.8;
    padding-inline-start: var(--grid);

    > .nav-link-highlight {
      border-inline-start: 1px solid var(--tz-color-base-gray-500);
      margin-left: 0;
      padding-block: calc(0.25 * var(--grid));
    }

    &:hover::before {
      opacity: 0.5;
    }

    &[aria-current]::before {
      opacity: 1;
    }
  }

  .summary {
    display: flex;
    gap: var(--tz-space-200);
    padding: 0;
    position: relative;

    &::marker,
    &::-webkit-details-marker {
      display: none;
    }

    &::after {
      background-image: url('data:image/svg+xml;utf8,<svg width="15" height="15" viewBox="0 0 15 15" fill="rgb(177, 177, 177)" xmlns="http://www.w3.org/2000/svg"><path d="M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>');
      background-position: center center;
      background-repeat: no-repeat;
      background-size: 1rem 1rem;
      content: "";
      display: flex;
      position: absolute;
      right: 0;
      height: 100%;
      width: var(--tz-space-800);
    }

    .nav-link {
      margin-inline-start: var(--tz-space-300);
      padding-inline: var(--tz-space-300);
      width: min-content;

      &::before {
        left: 0;
      }
    }
  }

  .details[open] .summary::after {
    transform: rotate(0.5turn);
  }
</style>
