/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

import {
  ParsedShadowToken,
  ShadowToken,
} from '@cobalt-ui/core';

export declare const tokens: {
  'shadow.base': ShadowToken['$value'];
  'shadow.inset': ShadowToken['$value'];
  'shadow.layered': ShadowToken['$value'];
  'shadow.simple': ShadowToken['$value'];
};

export declare const meta: {
  'shadow.base': ParsedShadowToken;
  'shadow.inset': ParsedShadowToken;
  'shadow.layered': ParsedShadowToken;
  'shadow.simple': ParsedShadowToken;
};

export declare const modes: Record<string, never>;

export declare function token<K extends keyof typeof tokens>(tokenID: K, modeName?: never): typeof tokens[K];
export declare function token<K extends keyof typeof modes, M extends keyof typeof modes[K]>(tokenID: K, modeName: M): typeof modes[K][M];
