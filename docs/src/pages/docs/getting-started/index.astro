---
import {Code} from 'astro/components';
import JSONYaml from '../../../components/JSONYaml.astro';
import Layout from '../../../layouts/docs.astro';

const title = 'Getting Started';
---

<Layout content={{title}}>
  <h1>{title}</h1>

  <p>Cobalt turns your <a href="/docs/tokens">W3C design tokens</a> into code using a CLI or Node.js. Cobalt is configurable and pluggable, and can generate the following <a href="/docs/plugins">via plugins</a>:</p>
  <ul>
    <li><a href="/docs/plugins/css">CSS</a></li>
    <li><a href="/docs/plugins/sass">Sass</a></li>
    <li><a href="/docs/plugins/js">JS/TS/JSON</a></li>
    <li>You can also make a <a href="/docs/guides/plugins">custom plugin</a> to generate more!</li>
  </ul>
  <h2>Introduction</h2>
  <p>
    Cobalt is tooling for the <a href="https://designtokens.org" target="_blank" rel="noopener noreferrer">W3C Community Group Design Tokens format</a> which is <strong>currently under development</strong>. You may be familiar with <a
      href="https://amzn.github.io/style-dictionary"
      target="_blank"
      rel="noopener noreferrer">Style Dictionary</a
    > which is an alternative design token system, but differs as it predates the new standard (that Cobalt uses). The new design tokens standard is the <a
      href="https://github.com/design-tokens/community-group#companies-and-open-source-projects-represented-on-the-dtcg"
      target="_blank"
      rel="noopener noreferrer">largest collaborative format</a
    > to-date, involving input from Figma, Adobe, Salesforce, Google, and more to push the format forward.
  </p>

  <p>Figma has a great video explaining what an exciting leap forward this is:</p>

  <div class="yt-embed">
    <iframe
      width="560"
      height="315"
      src="https://www.youtube-nocookie.com/embed/ssOdzxZdg58"
      title="YouTube video player"
      frameborder="0"
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      allowfullscreen></iframe>
  </div>

  <h2>Workflow</h2>

  <p>Starting with your design tokens (which will usually be in a program like Figma, or whatever you use to manage your design system), working with Cobalt involves the following steps:</p>

  <ol>
    <li>Creating a <code>tokens.json</code> design tokens file</li>
    <li>Installing Cobalt output plugins of your choice (e.g. JS, TS, CSS, and/or Sass)</li>
    <li>Running the CLI to output all your desired formats</li>
    <li>(Bonus) Adding Cobalt to CI to always keep your design system up-to-date</li>
  </ol>

  <h3>1. Creating the `tokens.json` file</h3>

  <p>
    This is the boring part—converting your tokens to JSON. Usually this involves manually pulling values from your styleguide or your design program (like Figma) and formatting the JSON yourself. There’s not a great UI for this yet (feel
    free to <a href="https://github.com/drwpow/cobalt-ui/issues">suggest one</a> if you have one you like), but <strong>the Cobalt team is developing one currently</strong>.
  </p>

  <p>Save these all to a <code>tokens.json</code> file (or <code>tokens.yaml</code>, if you prefer YAML) like so:</p>

  <JSONYaml
    code={`{
  "blue": {
    "60": {
      "$type": "color",
      "$value": "oklch(60% 0.216564 269)"
    }
  }
}`}
  />

  <p>You can use the following token types (organizing them into any <a href="/docs/tokens/#groups">Groups</a> you’d like) (<a href="/docs/tokens">docs</a>):</p>

  <ul>
    <li><a href="/docs/tokens/#color">Color</a></li>
    <li><a href="/docs/tokens/#dimension">Dimension</a></li>
    <li><a href="/docs/tokens/#font">Font Family</a></li>
    <li><a href="/docs/tokens/#font-weight">Font Weight</a></li>
    <li><a href="/docs/tokens/#duration">Duration</a></li>
    <li><a href="/docs/tokens/#cubic-bezier">Cubic Bézier</a></li>
    <li><a href="/docs/tokens/#number">Number</a></li>
    <li><a href="/docs/tokens/#link">Link</a></li>
    <li><a href="/docs/tokens/#stroke-style">Stroke style</a></li>
    <li><a href="/docs/tokens/#border">Border</a></li>
    <li><a href="/docs/tokens/#transition">Transition</a></li>
    <li><a href="/docs/tokens/#shadow">Shadow</a></li>
    <li><a href="/docs/tokens/#gradient">Gradient</a></li>
    <li><a href="/docs/tokens/#typography">Typography</a></li>
  </ul>

  <h3>2. Installing Cobalt Plugins of your choice</h3>

  <blockquote><p>ℹ️ For this step, you’ll need <a href="https://nodejs.org" target="_blank" rel="noopener noreferrer">Node.js</a> installed (v20 is recommended).</p></blockquote>

  <p>For this example, we’ll install the <a href="/docs/plugins/js">JS</a>, <a href="/docs/plugins/sass">Sass</a>, and <a href="/docs/plugins/css">CSS</a> plugins, but skip any you don’t need (you can always install them later).</p>

  <p>Run the following in a terminal, in the code project you’d like to generate code to:</p>

  <Code lang="bash" code="npm i -D @cobalt-ui/plugin-js @cobalt-ui/plugin-css @cobalt-ui/plugin-sass" />

  <h3>3. Running the CLI to output your desired formats</h3>

  <p>First install the CLI:</p>

  <Code lang="bash" code="npm i -D @cobalt-ui/cli" />

  <p>Next, in the root of your code project, create a <code>tokens.config.mjs</code> file, importing the plugins you installed in the previous step:</p>

  <Code
    lang="js"
    code={`import pluginCSS from '@cobalt-ui/plugin-css';
import pluginJS from '@cobalt-ui/plugin-js';
import pluginSass from '@cobalt-ui/plugin-sass';

/** @type import('@cobalt-ui/core').Config */
export default {
  tokens: './tokens.json',
  outDir: './tokens/',
  plugins: [
    pluginCSS(/* options */),
    pluginJS(/* options */),
    pluginSass(/* options */),
  ],
};`}
  />

  <p>To learn more about the config file, see <a href="/docs/reference/config">config options</a>. To learn about plugin options, see <a href="/docs/plugins">plugins</a>.</p>

  <p>Lastly, run the following command to generate all code from your tokens:</p>

  <Code lang="bash" code="npx co build" />

  <p>This will output JS, CSS, and Sass in the <code>./tokens/</code> folder (which you can change in your config). It will also alert you of any errors in your schema.</p>

  <h3>Next steps</h3>

  <ul>
    <li><a href="/docs/tokens)">Learn about tokens</a></li>
    <li><a href="/docs/guides/tokens-studio)">Sync with Figma using Tokens Studio</a></li>
    <li><a href="/docs/reference/config)">Learn how to configure Cobalt</a></li>
    <li><a href="/docs/plugins)">Add plugins</a></li>
  </ul>
</Layout>
