////
/// Design Tokens
/// Autogenerated from tokens.json.
/// DO NOT EDIT!
////

@use "sass:list";
@use "sass:map";

$__token-values: (
  "border.std": (
    ".": (1px solid #0d0300),
    "light": (1px solid #0d0300),
    "dark": (1px solid #ffffff),
  ),
  "color.green": (
    ".": (#00ff00),
    "light": (#6fdd8b),
    "dark": (#56d364),
  ),
  "ease.circ-in": (
    ".": (cubic-bezier(0.55, 0, 1, 0.45)),
  ),
  "ease.circ-in-out": (
    ".": (cubic-bezier(0.85, 0, 0.15, 1)),
  ),
  "ease.circ-out": (
    ".": (cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "ease.cubic-in": (
    ".": (cubic-bezier(0.32, 0, 0.67, 0)),
  ),
  "ease.cubic-in-out": (
    ".": (cubic-bezier(0.65, 0, 0.35, 1)),
  ),
  "ease.cubic-out": (
    ".": (cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "ease.linear": (
    ".": (cubic-bezier(0, 0, 1, 1)),
  ),
  "gradient.g-b": (
    ".": (#00ff00 0%, #0000ff 100%),
  ),
  "shadow.base": (
    ".": (0 4px 8px 0 #0000001a),
  ),
  "shadow.inset": (
    ".": (inset 0 4px 8px 0 #00000026),
  ),
  "shadow.layered": (
    ".": (0 1px 1px 0 #0000001f, 0 2px 2px 0 #0000001f, 0 4px 4px 0 #0000001f, 0 8px 8px 0 #0000001f, 0 16px 16px 0 #0000001f),
  ),
  "shadow.simple": (
    ".": (0 4px 8px 0 #0000001a),
  ),
  "timing.deliberate": (
    ".": (500ms),
  ),
  "timing.instant": (
    ".": (50ms),
  ),
  "timing.moderate": (
    ".": (250ms),
  ),
  "timing.quick": (
    ".": (100ms),
  ),
  "timing.slow": (
    ".": (1s),
  ),
  "transition.circ-in-deliberate": (
    ".": (500ms 0ms cubic-bezier(0.55, 0, 1, 0.45)),
  ),
  "transition.circ-in-instant": (
    ".": (50ms 0ms cubic-bezier(0.55, 0, 1, 0.45)),
  ),
  "transition.circ-in-moderate": (
    ".": (250ms 0ms cubic-bezier(0.55, 0, 1, 0.45)),
  ),
  "transition.circ-in-out-deliberate": (
    ".": (500ms 0ms cubic-bezier(0.85, 0, 0.15, 1)),
  ),
  "transition.circ-in-out-instant": (
    ".": (50ms 0ms cubic-bezier(0.85, 0, 0.15, 1)),
  ),
  "transition.circ-in-out-moderate": (
    ".": (250ms 0ms cubic-bezier(0.85, 0, 0.15, 1)),
  ),
  "transition.circ-in-out-quick": (
    ".": (100ms 0ms cubic-bezier(0.85, 0, 0.15, 1)),
  ),
  "transition.circ-in-out-slow": (
    ".": (1s 0ms cubic-bezier(0.85, 0, 0.15, 1)),
  ),
  "transition.circ-in-quick": (
    ".": (100ms 0ms cubic-bezier(0.55, 0, 1, 0.45)),
  ),
  "transition.circ-in-slow": (
    ".": (1s 0ms cubic-bezier(0.55, 0, 1, 0.45)),
  ),
  "transition.circ-out-deliberate": (
    ".": (500ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.circ-out-instant": (
    ".": (50ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.circ-out-moderate": (
    ".": (250ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.circ-out-quick": (
    ".": (100ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.circ-out-slow": (
    ".": (1s 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.cubic-in-deliberate": (
    ".": (500ms 0ms cubic-bezier(0.32, 0, 0.67, 0)),
  ),
  "transition.cubic-in-instant": (
    ".": (50ms 0ms cubic-bezier(0.32, 0, 0.67, 0)),
  ),
  "transition.cubic-in-moderate": (
    ".": (250ms 0ms cubic-bezier(0.32, 0, 0.67, 0)),
  ),
  "transition.cubic-in-out-deliberate": (
    ".": (500ms 0ms cubic-bezier(0.65, 0, 0.35, 1)),
  ),
  "transition.cubic-in-out-instant": (
    ".": (50ms 0ms cubic-bezier(0.65, 0, 0.35, 1)),
  ),
  "transition.cubic-in-out-moderate": (
    ".": (250ms 0ms cubic-bezier(0.65, 0, 0.35, 1)),
  ),
  "transition.cubic-in-out-quick": (
    ".": (100ms 0ms cubic-bezier(0.65, 0, 0.35, 1)),
  ),
  "transition.cubic-in-out-slow": (
    ".": (1s 0ms cubic-bezier(0.65, 0, 0.35, 1)),
  ),
  "transition.cubic-in-quick": (
    ".": (100ms 0ms cubic-bezier(0.32, 0, 0.67, 0)),
  ),
  "transition.cubic-in-slow": (
    ".": (1s 0ms cubic-bezier(0.32, 0, 0.67, 0)),
  ),
  "transition.cubic-out-deliberate": (
    ".": (500ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.cubic-out-instant": (
    ".": (50ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.cubic-out-moderate": (
    ".": (250ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.cubic-out-quick": (
    ".": (100ms 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.cubic-out-slow": (
    ".": (1s 0ms cubic-bezier(0.33, 1, 0.68, 1)),
  ),
  "transition.linear-deliberate": (
    ".": (500ms 0ms cubic-bezier(0, 0, 1, 1)),
  ),
  "transition.linear-instant": (
    ".": (50ms 0ms cubic-bezier(0, 0, 1, 1)),
  ),
  "transition.linear-moderate": (
    ".": (250ms 0ms cubic-bezier(0, 0, 1, 1)),
  ),
  "transition.linear-quick": (
    ".": (100ms 0ms cubic-bezier(0, 0, 1, 1)),
  ),
  "transition.linear-slow": (
    ".": (1s 0ms cubic-bezier(0, 0, 1, 1)),
  ),
  "typography.body": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.body\")` instead.",
  ),
  "typography.callout": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.callout\")` instead.",
  ),
  "typography.family.body": (
    ".": ("IBM Plex Sans", -system-ui, sans-serif),
  ),
  "typography.family.heading": (
    ".": (Helvetica),
  ),
  "typography.label": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.label\")` instead.",
  ),
  "typography.page-title": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.page-title\")` instead.",
  ),
  "typography.subheading": (
    "__cobalt-error": "This is a typography mixin. Use `@include typography(\"typography.subheading\")` instead.",
  ),
);

$__token-typography-mixins: (
  "typography.body": (
    ".": (
      "font-family": ("IBM Plex Sans", -system-ui, sans-serif),
      "font-size": (16px),
      "font-weight": (400),
      "line-height": (1.5),
    ),
  ),
  "typography.callout": (
    ".": (
      "font-family": ("IBM Plex Sans", -system-ui, sans-serif),
      "font-size": (18px),
      "font-style": (italic),
      "font-weight": (300),
      "line-height": (1.5),
    ),
  ),
  "typography.label": (
    ".": (
      "font-family": ("IBM Plex Sans", -system-ui, sans-serif),
      "font-size": (16px),
      "font-weight": (400),
      "line-height": (1.5),
    ),
  ),
  "typography.page-title": (
    ".": (
      "font-family": (Helvetica),
      "font-size": (48px),
      "font-weight": (600),
      "letter-spacing": (0.125em),
      "line-height": (1.25),
    ),
  ),
  "typography.subheading": (
    ".": (
      "font-family": (Helvetica),
      "font-size": (18px),
      "font-weight": (500),
      "letter-spacing": (0.25em),
      "line-height": (1.375),
      "text-transform": (uppercase),
    ),
  ),
);

@function token($tokenName, $modeName: ".") {
  @if map.has-key($__token-values, $tokenName) == false {
    @error "No token named \"#{$tokenName}\"";
  }
  $_token: map.get($__token-values, $tokenName);
  @if map.has-key($_token, "__cobalt-error") {
    @error map.get($_token, "__cobalt-error");
  }
  @if map.has-key($_token, $modeName) {
    @return map.get($_token, $modeName);
  } @else {
    @return map.get($_token, ".");
  }
}

@function listModes($tokenName) {
  @if map.has-key($__token-values, $tokenName) == false {
    @error "No token named \"#{$tokenName}\"";
  }
  $_modes: ();
  @each $k in map.get($__token-values, $tokenName) {
    @if $k != "." {
      $_modes: list.append($_modes, $k);
    }
  }
  @return $_modes;
}

@mixin typography($tokenName, $modeName: ".") {
  @if map.has-key($__token-typography-mixins, $tokenName) == false {
    @error "No typography mixin named \"#{$tokenName}\"";
  }
  $_mixin: map.get($__token-typography-mixins, $tokenName);
  $_properties: map.get($_mixin, ".");
  @if map.has-key($_mixin, $modeName) {
    $_properties: map.get($_mixin, $modeName);
  }
  @each $_property, $_value in $_properties {
    #{$_property}: #{$_value};
  }
}
