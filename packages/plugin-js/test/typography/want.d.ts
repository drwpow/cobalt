/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

import {
  FontFamilyToken,
  ParsedFontFamilyToken,
  ParsedTypographyToken,
  TypographyToken,
} from '@cobalt-ui/core';

export declare const tokens: {
  'typography.family.body': FontFamilyToken['$value'];
  'typography.family.heading': FontFamilyToken['$value'];
  'typography.page-title': TypographyToken['$value'];
  'typography.subheading': TypographyToken['$value'];
  'typography.callout': TypographyToken['$value'];
  'typography.body': TypographyToken['$value'];
};

export declare const meta: {
  'typography.family.body': ParsedFontFamilyToken;
  'typography.family.heading': ParsedFontFamilyToken;
  'typography.page-title': ParsedTypographyToken;
  'typography.subheading': ParsedTypographyToken;
  'typography.callout': ParsedTypographyToken;
  'typography.body': ParsedTypographyToken;
};

export declare const modes: Record<string, never>;

export declare function token<K extends keyof typeof tokens>(tokenID: K, modeName?: never): typeof tokens[K];
export declare function token<K extends keyof typeof modes, M extends keyof typeof modes[K]>(tokenID: K, modeName: M): typeof modes[K][M];
